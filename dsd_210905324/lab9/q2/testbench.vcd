$date
	Thu Oct 27 09:34:59 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 16 ! out [15:0] $end
$var wire 1 " c $end
$var wire 1 # b $end
$var wire 1 $ a $end
$var reg 4 % in [3:0] $end
$var integer 32 & i [31:0] $end
$scope module e0 $end
$var wire 1 $ a $end
$var wire 1 # b $end
$var wire 1 " c $end
$var wire 1 ' en $end
$var wire 4 ( w [3:0] $end
$var wire 16 ) y [15:0] $end
$scope module ex0 $end
$var wire 1 ' en $end
$var wire 4 * w [3:0] $end
$var wire 16 + y [15:0] $end
$var wire 4 , x [3:0] $end
$scope module d0 $end
$var wire 1 ' en $end
$var wire 2 - w [1:0] $end
$var reg 4 . y [3:0] $end
$upscope $end
$scope module d1 $end
$var wire 1 / en $end
$var wire 2 0 w [1:0] $end
$var reg 4 1 y [3:0] $end
$upscope $end
$scope module d2 $end
$var wire 1 2 en $end
$var wire 2 3 w [1:0] $end
$var reg 4 4 y [3:0] $end
$upscope $end
$scope module d3 $end
$var wire 1 5 en $end
$var wire 2 6 w [1:0] $end
$var reg 4 7 y [3:0] $end
$upscope $end
$scope module d4 $end
$var wire 1 8 en $end
$var wire 2 9 w [1:0] $end
$var reg 4 : y [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b111 :
b0 9
18
b1111 7
b0 6
05
b1111 4
b0 3
02
b1111 1
b0 0
0/
b111 .
b0 -
b111 ,
b111111111111111 +
b0 *
b111111111111111 )
b0 (
1'
b0 &
b0 %
0$
0#
1"
b111111111111111 !
$end
#20
0"
1#
b1011111111111111 !
b1011111111111111 )
b1011111111111111 +
b1011 :
b1 0
b1 3
b1 6
b1 9
b1 %
b1 (
b1 *
b1 &
#40
1$
0#
b1101111111111111 !
b1101111111111111 )
b1101111111111111 +
b1101 :
b10 0
b10 3
b10 6
b10 9
b10 %
b10 (
b10 *
b10 &
#60
1"
b1110111111111111 !
b1110111111111111 )
b1110111111111111 +
b1110 :
b11 0
b11 3
b11 6
b11 9
b11 %
b11 (
b11 *
b11 &
#80
0"
0$
b111 7
08
15
b1011 ,
b1011 .
b1111011111111111 !
b1111011111111111 )
b1111011111111111 +
b1111 :
b1 -
b0 0
b0 3
b0 6
b0 9
b100 %
b100 (
b100 *
b100 &
#100
b1111101111111111 !
b1111101111111111 )
b1111101111111111 +
b1011 7
b1 0
b1 3
b1 6
b1 9
b101 %
b101 (
b101 *
b101 &
#120
1#
1$
b1111110111111111 !
b1111110111111111 )
b1111110111111111 +
b1101 7
b10 0
b10 3
b10 6
b10 9
b110 %
b110 (
b110 *
b110 &
#140
1"
0#
0$
b1111111011111111 !
b1111111011111111 )
b1111111011111111 +
b1110 7
b11 0
b11 3
b11 6
b11 9
b111 %
b111 (
b111 *
b111 &
#160
0"
b111 4
05
12
b1101 ,
b1101 .
b1111111101111111 !
b1111111101111111 )
b1111111101111111 +
b1111 7
b10 -
b0 0
b0 3
b0 6
b0 9
b1000 %
b1000 (
b1000 *
b1000 &
#180
b1111111110111111 !
b1111111110111111 )
b1111111110111111 +
b1011 4
b1 0
b1 3
b1 6
b1 9
b1001 %
b1001 (
b1001 *
b1001 &
#200
b1111111111011111 !
b1111111111011111 )
b1111111111011111 +
b1101 4
b10 0
b10 3
b10 6
b10 9
b1010 %
b1010 (
b1010 *
b1010 &
#220
b1111111111101111 !
b1111111111101111 )
b1111111111101111 +
b1110 4
b11 0
b11 3
b11 6
b11 9
b1011 %
b1011 (
b1011 *
b1011 &
#240
b111 1
02
1/
b1110 ,
b1110 .
b1111111111110111 !
b1111111111110111 )
b1111111111110111 +
b1111 4
b11 -
b0 0
b0 3
b0 6
b0 9
b1100 %
b1100 (
b1100 *
b1100 &
#260
b1111111111111011 !
b1111111111111011 )
b1111111111111011 +
b1011 1
b1 0
b1 3
b1 6
b1 9
b1101 %
b1101 (
b1101 *
b1101 &
#280
b1111111111111101 !
b1111111111111101 )
b1111111111111101 +
b1101 1
b10 0
b10 3
b10 6
b10 9
b1110 %
b1110 (
b1110 *
b1110 &
#300
b1111111111111110 !
b1111111111111110 )
b1111111111111110 +
b1110 1
b11 0
b11 3
b11 6
b11 9
b1111 %
b1111 (
b1111 *
b1111 &
#320
b10000 &
