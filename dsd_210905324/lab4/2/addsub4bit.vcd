$date
	Thu Sep 15 10:30:57 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module addsub4bit_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " Cout $end
$var reg 1 # Cin $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module ex2 $end
$var wire 1 # Cin $end
$var wire 4 & x [3:0] $end
$var wire 4 ' y [3:0] $end
$var wire 4 ( z [3:0] $end
$var wire 4 ) s [3:0] $end
$var wire 1 " Cout $end
$scope module stage0 $end
$var wire 1 # Cin $end
$var wire 4 * x [3:0] $end
$var wire 4 + y [3:0] $end
$var wire 4 , s [3:0] $end
$var wire 3 - c [3:1] $end
$var wire 1 " Cout $end
$scope module stage0 $end
$var wire 1 # Cin $end
$var wire 1 . Cout $end
$var wire 1 / s $end
$var wire 1 0 x $end
$var wire 1 1 y $end
$upscope $end
$scope module stage1 $end
$var wire 1 2 Cin $end
$var wire 1 3 Cout $end
$var wire 1 4 s $end
$var wire 1 5 x $end
$var wire 1 6 y $end
$upscope $end
$scope module stage2 $end
$var wire 1 7 Cin $end
$var wire 1 8 Cout $end
$var wire 1 9 s $end
$var wire 1 : x $end
$var wire 1 ; y $end
$upscope $end
$scope module stage3 $end
$var wire 1 < Cin $end
$var wire 1 " Cout $end
$var wire 1 = s $end
$var wire 1 > x $end
$var wire 1 ? y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#20
1"
1<
b100 -
18
0=
09
1;
1?
b1100 (
b1100 +
b1 !
b1 )
b1 ,
1/
1:
1#
b11 %
b11 '
b100 $
b100 &
b100 *
#40
17
13
12
1.
1<
1=
0"
b111 -
18
04
09
11
0?
b101 (
b101 +
b1000 !
b1000 )
b1000 ,
0/
10
15
0:
0#
b101 %
b101 '
b11 $
b11 &
b11 *
#60
0<
08
19
02
07
0.
b0 -
03
0"
01
0/
04
b1100 !
b1100 )
b1100 ,
1=
b100 (
b100 +
00
05
1>
b100 %
b100 '
b1000 $
b1000 &
b1000 *
#80
17
1"
13
1<
12
18
b111 -
1.
09
0=
16
0;
1?
b1010 (
b1010 +
b0 !
b0 )
b0 ,
0/
10
1:
0>
1#
b101 %
b101 '
b101 $
b101 &
b101 *
#100
